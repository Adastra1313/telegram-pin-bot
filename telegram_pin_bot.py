import os
import json
import datetime
from flask import Flask
from dotenv import load_dotenv
from telegram import ReplyKeyboardMarkup, Update, Bot
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# 1) –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .env
load_dotenv()
TOKEN             = os.getenv("TELEGRAM_TOKEN")
SMM_CHAT_IDS      = [int(x) for x in os.getenv("SMM_CHAT_IDS","").split(",") if x.strip()]
STORAGE_CHAT_ID   = int(os.getenv("STORAGE_CHAT_ID","0"))
PINNED_MESSAGE_ID = int(os.getenv("PINNED_MESSAGE_ID","0"))

if not all([TOKEN, SMM_CHAT_IDS, STORAGE_CHAT_ID, PINNED_MESSAGE_ID]):
    raise RuntimeError(
        "–í–∫–∞–∂—ñ—Ç—å —É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ: TELEGRAM_TOKEN, SMM_CHAT_IDS, STORAGE_CHAT_ID, PINNED_MESSAGE_ID"
    )

# 2) –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Flask (keep-alive)
app = Flask(__name__)
@app.route("/")
def home():
    return "‚úÖ Bot is running"

# 3) –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram-–±–æ—Ç–∞
async def start(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    kb = ReplyKeyboardMarkup(
        [["–ö–æ–Ω—Ç–µ–Ω—Ç –∑ –≤–µ—Å—ñ–ª–ª—è, –≥–µ–Ω–¥–µ—Ä–ø–∞—Ç—ñ—è, –æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è"],
         ["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–∏, –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó"]],
        resize_keyboard=True
    )
    await update.message.reply_text(
        "–©–æ –∑–∞ –∫–æ—Ç–∏–∫ –∑–∞–≤—ñ—Ç–∞–≤? –©–æ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–∞–∑–Ω—ñ–º–∞–≤?",
        reply_markup=kb
    )

async def choose_category(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ctx.user_data["category"] = update.message.text
    await update.message.reply_text("–ù–∞–¥—ñ—à–ª—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ—Å.")

async def receive_link(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    link = update.message.text
    uid  = str(update.effective_user.id)

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ JSON —ñ–∑ –∑–∞–ø—ñ–Ω-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot = Bot(TOKEN)
    chat = await bot.get_chat(STORAGE_CHAT_ID)
    pinned = chat.pinned_message
    try:
        db = json.loads(pinned.text or "{}")
    except:
        db = {}

    entry = db.get(uid, {"name": update.effective_user.full_name, "count": 0, "subs": []})
    entry["count"] += 1
    entry["subs"].append({
        "category": ctx.user_data.get("category", ""),
        "link":     link,
        "time":     datetime.datetime.utcnow().isoformat()
    })
    db[uid] = entry

    # –ó–±–µ—Ä–µ–≥—Ç–∏ JSON –Ω–∞–∑–∞–¥
    text = json.dumps(db, ensure_ascii=False, indent=2)
    await bot.edit_message_text(
        chat_id=STORAGE_CHAT_ID,
        message_id=PINNED_MESSAGE_ID,
        text=text
    )

    # –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    await update.message.reply_text(f"–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ! –¢–≤—ñ–π –ª—ñ—á–∏–ª—å–Ω–∏–∫ —á–µ–º–ø—ñ–æ–Ω–∞: {entry['count']}")

    # –°–ø–æ–≤—ñ—Å—Ç–∏—Ç–∏ SMM-—á–∞—Ç–∏
    alert = (
        f"üÜï –ù–æ–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤—ñ–¥ {entry['name']}\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {ctx.user_data.get('category')}\n"
        f"–õ—ñ–Ω–∫: {link}"
    )
    for cid in SMM_CHAT_IDS:
        await bot.send_message(chat_id=cid, text=alert)

# 4) –ü–æ–±—É–¥–æ–≤–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ Application
if __name__ == "__main__":
    application = (
        ApplicationBuilder()
        .token(TOKEN)
        .build()
    )
    application.add_handler(CommandHandler("start", start))
    application.add_handler(
        MessageHandler(
            filters.Regex(
                r"^(–ö–æ–Ω—Ç–µ–Ω—Ç –∑ –≤–µ—Å—ñ–ª–ª—è, –≥–µ–Ω–¥–µ—Ä–ø–∞—Ç—ñ—è, –æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è|–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–∏, –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó)$"
            ), choose_category
        )
    )
    application.add_handler(
        MessageHandler(filters.Regex(r"^http"), receive_link)
    )

    # –ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞—î–º–æ Flask —Ç–∞ –ø–æ–ª—ñ–Ω–≥
    from threading import Thread
    Thread(target=lambda: app.run(host="0.0.0.0", port=3000)).start()
    application.run_polling()
